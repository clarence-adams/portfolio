{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Tile","props","backgroundImage","port","image","id","class","onClick","window","open","url","title","style","library","add","fab","faWrench","App","useState","undefined","setPort","useEffect","fetch","then","res","json","data","toString","className","href","target","rel","icon","size","map","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPA+FA,SAASA,EAAKC,GAEZ,IAAIC,EAGFA,EADgB,MAAdD,EAAME,KACU,oBAAsBF,EAAME,KAAO,IAAMF,EAAMG,MAAQ,OAEvD,kDAAoDH,EAAMG,MAAQ,OAOtF,OACE,sBAAKC,GAAIJ,EAAMI,GAAIC,MAAM,eAAeC,QALrB,WACnBC,OAAOC,KAAKR,EAAMS,IAAK,WAIvB,UACE,wBAAQJ,MAAM,cAAd,SACE,6BAAKL,EAAMU,UAEb,qBAAKL,MAAM,kBAAkBM,MAAO,CAACV,gBAAiB,OAASA,EAAkB,UA1GvFW,IAAQC,IAAIC,IAAKC,KA+GFC,MA5Gf,WACE,MAAwBC,wBAASC,GAAjC,mBAAOhB,EAAP,KAAaiB,EAAb,KAgDA,OA9CAC,qBAAU,WACRC,MAAM,QACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUN,EAAQM,EAAKvB,KAAKwB,iBACnC,IA2CD,sBAAKC,UAAU,MAAf,UACE,iCACE,sBAAKvB,GAAG,SAAR,UACE,mBAAGC,MAAM,gBAAgBuB,KAAK,mBAA9B,mBACA,mBAAGvB,MAAM,gBAAgBuB,KAAK,iBAA9B,sBACA,mBAAGvB,MAAM,gBAAgBD,GAAG,cAC5BwB,KAAK,uCAAuCC,OAAO,SACnDC,IAAI,aAFJ,SAGE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,iBAAkBC,KAAK,SAExD,mBAAG3B,MAAM,gBAAgBD,GAAG,gBAC5BwB,KAAK,uDACLC,OAAO,SAASC,IAAI,aAFpB,SAGE,cAAC,IAAD,CAAiBC,KAAM,CAAC,MAAO,YAAaC,KAAK,cAIvD,iCACE,sBAAK5B,GAAG,kBAAR,UACE,oBAAIA,GAAG,aAAP,8BACA,iEACA,4BAAG,kFAAoD,cAAC,IAAD,CAAiB2B,KAAK,mBAE/E,qBAAK3B,GAAG,gBAAR,SA/DQ,CACZ,CACE,GAAM,iBACN,MAAS,iBACT,IAAO,oCACP,MAAS,0BAEX,CACE,GAAM,aACN,MAAS,aACT,IAAO,8CACP,MAAS,uCAEX,CACE,GAAM,iBACN,MAAS,iBACT,IAAO,gDACP,MAAS,yCAEX,CACE,GAAM,eACN,MAAS,eACT,IAAO,yCACP,MAAS,kCAEX,CACE,GAAM,yBACN,MAAS,yBACT,IAAO,+DACP,MAAS,wDAEX,CACE,GAAM,qBACN,MAAS,qBACT,IAAO,+CACP,MAAS,yCA6BE6B,KAAI,SAACC,GAAD,OACT,cAACnC,EAAD,CAAMK,GAAI8B,EAAQ9B,GAAIM,MAAOwB,EAAQxB,MAAOD,IAAKyB,EAAQzB,IAAKN,MAAO+B,EAAQ/B,MAAOD,KAAMA,gBC1EvFiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6077ca6d.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useEffect} from \"react\";\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {fab} from '@fortawesome/free-brands-svg-icons'\nimport {faWrench} from '@fortawesome/free-solid-svg-icons'\nimport React from 'react';\n\nlibrary.add(fab, faWrench)\n\n// app\nfunction App() {\n  const [port, setPort] = useState(undefined)\n\n  useEffect(() => {\n    fetch(\"/api\")\n      .then((res) => res.json())\n      .then((data) => setPort(data.port.toString()));\n  }, []);\n\n  // array of objects that hold info needed to construct tile components\n  const tiles = [\n    {\n      \"id\": \"small-business\",\n      \"title\": \"small business\",\n      \"url\": \"http://www.sloneheatingandair.com\",\n      \"image\": \"sloneheatingandair.com\"\n    },\n    {\n      \"id\": \"calculator\",\n      \"title\": \"calculator\",\n      \"url\": \"https://flamboyant-kalam-8ca516.netlify.app\",\n      \"image\": \"flamboyant-kalam-8ca516.netlify.app\"\n    },\n    {\n      \"id\": \"pomodoro-timer\",\n      \"title\": \"pomodoro timer\",\n      \"url\": \"https://suspicious-noether-2de41b.netlify.app\",\n      \"image\": \"suspicious-noether-2de41b.netlify.app\"\n    },\n    {\n      \"id\": \"drum-machine\",\n      \"title\": \"drum machine\",\n      \"url\": \"https://happy-curie-b68712.netlify.app\",\n      \"image\": \"happy-curie-b68712.netlify.app\"\n    },\n    {\n      \"id\": \"random-quote-generator\",\n      \"title\": \"random quote generator\",\n      \"url\": \"https://clarence-de-coder.github.io/fcc-random-quote-machine\",\n      \"image\": \"clarence-de-coder.github.io!fcc-random-quote-machine\"\n    },\n    {\n      \"id\": \"markdown-previewer\",\n      \"title\": \"markdown previewer\",\n      \"url\": \"https://quizzical-volhard-f6d8e1.netlify.app\",\n      \"image\": \"quizzical-volhard-f6d8e1.netlify.app\"\n    }\n  ]\n\n  return (\n    <div className=\"App\">\n      <header>\n        <nav id=\"navbar\">\n          <a class=\"navbar-button\" href=\"#welcome-section\">About</a>\n          <a class=\"navbar-button\" href=\"#project-tiles\">Projects</a>\n          <a class=\"navbar-button\" id=\"github-link\"\n          href=\"https://github.com/clarence-de-coder\" target=\"_blank\"\n          rel=\"noreferrer\">\n            <FontAwesomeIcon icon={[\"fab\", \"github-square\"]} size=\"2x\"/>\n          </a>\n          <a class=\"navbar-button\" id=\"linkedin-link\"\n          href=\"https://www.linkedin.com/in/clarence-adams-b81b875a/\"\n          target=\"_blank\" rel=\"noreferrer\">\n            <FontAwesomeIcon icon={[\"fab\", \"linkedin\"]} size=\"2x\"/>\n          </a>\n        </nav>\n      </header>\n      <main>\n        <div id=\"welcome-section\">\n          <h1 id=\"page-title\">Hi, I'm Clarence</h1>\n          <p>This is my portfolio of projects</p>\n          <p><i>currently under development but fully functional <FontAwesomeIcon icon=\"wrench\"/></i></p>\n        </div>\n        <div id=\"project-tiles\">\n          {tiles.map((element) =>\n            <Tile id={element.id} title={element.title} url={element.url} image={element.image} port={port}/>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n\n// project tile component\nfunction Tile(props) {\n\n  let backgroundImage\n\n  if (props.port == 3001) {\n    backgroundImage = 'http://localhost:' + props.port + '/' + props.image + '.png'\n  } else {\n    backgroundImage = 'https://clarence-adams-portfolio.herokuapp.com/' + props.image + '.png'\n  }\n\n  const clickHandler = () => {\n    window.open(props.url, \"_blank\")\n  }\n\n  return (\n    <div id={props.id} class=\"project-tile\" onClick={clickHandler}>\n      <header class=\"tile-header\">\n        <h2>{props.title}</h2>\n      </header>\n      <div class=\"tile-screenshot\" style={{backgroundImage: \"url(\" + backgroundImage + \")\"}}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}